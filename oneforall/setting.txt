# coding=utf-8

import pathlib

relative_directory = pathlib.Path(__file__).parent.parent
data_storage_dir = relative_directory.joinpath('data')
enable_check_network = True
enable_check_version = True
enable_brute_module = True
enable_dns_resolve = True
enable_http_request = True
enable_finder_module = True
enable_altdns_module = True
enable_cdn_check = True
enable_banner_identify = True
enable_takeover_check = False
http_request_port = 'large'
result_export_alive = False
result_save_format = 'csv'
result_save_path = None
save_module_result = False
enable_all_module = True
enable_partial_module = []
brute_concurrent_num = 2000
brute_wordlist_path = 'data/subnames_medium.txt'
use_china_nameservers = False
enable_recursive_brute = False
brute_recursive_depth = 2
recursive_nextlist_path = None
enable_check_dict = False
delete_generated_dict = True
delete_massdns_result = True
only_save_valid = True
check_time = 10
enable_fuzz = False
fuzz_place = None
fuzz_rule = None
brute_ip_blacklist = {'0.0.0.0', '0.0.0.1'}
brute_cname_blacklist = {'nonexist.sdo.com', 'shop.taobao.com'}
ip_appear_maximum = 100
cname_appear_maximum = 50
enable_request_proxy = False
proxy_all_module = False
proxy_partial_module = ['GoogleQuery', 'AskSearch', 'DuckDuckGoSearch',
                        'GoogleAPISearch', 'GoogleSearch', 'YahooSearch',
                        'YandexSearch', 'CrossDomainXml',
                        'ContentSecurityPolicy']
request_proxy_pool = [{'http': 'http://127.0.0.1:1080',
                       'https': 'http://127.0.0.1:1080'}]
request_thread_count = None
request_timeout_second = (13, 27)
request_ssl_verify = False
request_allow_redirect = True
request_redirect_limit = 10
request_default_headers = {
    'Accept': 'text/html,application/xhtml+xml,'
              'application/xml;q=0.9,*/*;q=0.8',
    'Accept-Encoding': 'gzip, deflate',
    'Accept-Language': 'en-US,en;q=0.9,zh-CN;q=0.8,zh;q=0.7',
    'Cache-Control': 'max-age=0',
    'DNT': '1',
    'Referer': 'https://www.google.com/',
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 '
                  '(KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36',
    'Upgrade-Insecure-Requests': '1',
    'X-Forwarded-For': '127.0.0.1'
}
enable_random_ua = True
enable_recursive_search = False
search_recursive_times = 2
cam_records_maximum_per_domain = 10000
use_tld_extract = True