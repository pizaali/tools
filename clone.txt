#!/bin/bash
function show_banner() {
    echo -e "\e[1;36m"
    echo "=============================================="
    figlet -f slant "System Manager" 2>/dev/null || echo "SYSTEM MANAGER TOOL"
    echo -e "Version: 1.1\tDate: $(date +%F)"
    echo -e "\e[0m"
    echo "=============================================="
}

# ----------------------
# 1. System Type Detection
# ----------------------
function detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$ID
        VER=$VERSION_ID
    else
        OS=$(uname -s)
        VER=$(uname -r)
    fi

    ARCH=$(uname -m)
    case $ARCH in
        x86_64) ARCH="x64" ;;
        aarch64) ARCH="arm64" ;;
        *) ARCH="unknown" ;;
    esac

    echo "[+] System Info: $OS $VER ($ARCH)"
}

# ----------------------
# 2. System Update
# ----------------------
function system_update() {
    echo -e "\n\e[34m[1/5] System Update...\e[0m"
    case $OS in
        centos|rhel|fedora)
            sudo yum update -y
            ;;
        ubuntu|debian|kali)
            sudo apt update && sudo apt upgrade -y
            ;;
        *)
            echo "[-] Unsupport System Realease: $OS"
            exit 1
            ;;
    esac
    echo "[√] System Update Completed!"
}

# ----------------------
# 3. Software Installation Check
# ----------------------
function check_install() {
    local software=("git" "curl" "wget" "python3" "pip3" "masscan" "screen" "unzip" "p7zip-full")
    echo -e "\n\e[34m[2/5] Software Installation Check...\e[0m"
    
    for pkg in "${software[@]}"; do
        if ! command -v $pkg &>/dev/null; then
            echo "[!] Missing Software: $pkg"
            case $OS in
                centos|rhel) sudo yum install -y $pkg ;;
                ubuntu|debian|kali) sudo apt install -y $pkg ;;
            esac
        else
            echo "[√] Already Installed: $pkg"
        fi
    done
}

# ----------------------
# 4. Clone Git Repository
# ----------------------
function clone_projects() {
    local repos=(
        "https://github.com/pizaali/parambrute.git"
        "https://github.com/pizaali/bakbrute.git"
        "https://github.com/maurosoria/dirsearch.git"
        "https://github.com/sqlmapproject/sqlmap.git"
        "https://github.com/shmilylty/OneForAll.git"
        "https://github.com/lijiejie/ds_store_exp.git"
        "https://github.com/admintony/svnExploit.git"
        "https://github.com/H4ckForJob/dirmap.git"
        "https://github.com/pizaali/gitlabversion.git"
        "https://github.com/pizaali/GitHack.git"
    )
    echo -e "\n\e[34m[3/5] Clone Git Repository...\e[0m"
    
    for repo in "${repos[@]}"; do
        repo_name=$(basename $repo .git)
        if [ -d "$repo_name" ]; then
            echo "[!] Directory Exists: $repo_name"
        else
            echo "[+] Cloning：$repo"
            git clone $repo
        fi
    done
}

# ----------------------
# 5. Install Python Modules
# ----------------------
function install_python_modules() {
    local modules=(
		"beautifulsoup4"
		"bs4"
		"certifi"
		"chardet"
		"colorama"
		"dnspython"
		"exrex"
		"fire"
		"future"
		"idna"
		"loguru"
		"PySocks"
		"requests"
		"six"
		"soupsieve"
		"SQLAlchemy"
		"tenacity"
		"termcolor"
		"tqdm"
		"treelib"
		"urllib3"
		"win32-setctime"
		"setuptools"
		"aiohttp"
		"aiofiles"
		"fake_useragent"
		"lxml"
		"progressbar2"
		"gevent"
		"PySocks>=1.7.1"
		"Jinja2>=3.0.0"
		"defusedxml>=0.7.0"
		"pyopenssl>=21.0.0"
		"requests_ntlm>=1.3.0"
		"ntlm_auth>=1.5.0"
		"mysql-connector-python>=8.0.20"
		"psycopg[binary]>=3.0"
		"defusedcsv>=2.0.0"
		"requests-toolbelt>=1.0.0"
		"setuptools>=66.0.0"
		"httpx>=0.27.2"
		"httpx-ntlm>=1.4.0"
    )
    echo -e "\n\e[34m[4/5] Install Python Modules...\e[0m"
    
    for mod in "${modules[@]}"; do
        echo "[+] Installing: $mod"
        pip3 install $mod || pip install $mod
    done
}

# ----------------------
# 6. Execute System Commands
# ----------------------
function run_commands() {
    local cmds=(
        "mkdir fscan && wget https://github.com/shadow1ng/fscan/releases/download/1.8.4/fscan -O fscan/fscan && chmod +x fscan/fscan"
        "mv OneForAll oneforall && rm -f oneforall/config/setting.py && curl -sSL https://raw.githubusercontent.com/pizaali/tools/refs/heads/main/oneforall/setting.txt | base64 -d > oneforall/config/setting.py"
        "mkdir jndi && wget https://github.com/0x727/JNDIExploit/releases/download/1.1/JNDIExploit.zip -O jndi/JNDIExploit.zip && unzip jndi/JNDIExploit.zip -d jndi && rm -f jndi/JNDIExploit.zip && curl -sSL https://raw.githubusercontent.com/0x727/JNDIExploit/refs/heads/master/README.md -o jndi/readme.md"
		"curl -sSL https://raw.githubusercontent.com/pizaali/tools/refs/heads/main/dic/dic_data.zip -o dic_data.zip && 7z x dic_data.zip -pwmjXAslwDW8M8jqp -aos -r -odirmap/data && 7z x dic_data.zip -pwmjXAslwDW8M8jqp -aos -r -odirsearch/db && rm -rf dic_data.zip"
		"wget https://github.com/Y5neKO/ShiroEXP/releases/download/v0.2/ShiroEXP-v0.2.zip && mkdir shiroexp && 7z x ShiroEXP-v0.2.zip -oshiroexp && rm-rf ShiroEXP-v0.2.zip && curl -sSL https://raw.githubusercontent.com/Y5neKO/ShiroEXP/refs/heads/main/README.md -o shiroexp/readme.md"
    )
    echo -e "\n\e[34m[5/5] Execute System Commands...\e[0m"
    
    for cmd in "${cmds[@]}"; do
        echo "[+] Executing: $cmd"
        eval $cmd
    done
}

# ----------------------
# Main Program
# ----------------------
function main() {
    show_banner
    detect_os
    system_update
    check_install
    clone_projects
    install_python_modules
    run_commands
    
    echo -e "\n\e[1;32m[√] All Operation Hava Been Completed!\e[0m"
}

main "$@"
